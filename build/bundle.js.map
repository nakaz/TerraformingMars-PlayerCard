{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.js","../../src/HistoryControls.svelte","../../src/ResetControls.svelte","../../src/Drawer.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/utils.js","../../src/TerraformRank.svelte","../../src/Generation.svelte","../../src/MegaCredits.svelte","../../src/Steel.svelte","../../src/Titanium.svelte","../../src/Plants.svelte","../../src/Energy.svelte","../../src/Heat.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from 'svelte/store'\n\nconst initialState = {\n  TR: 20,\n  Generation: 1,\n  MCreditS: 0,\n  MCreditP: 1,\n  SteelS: 0,\n  SteelP: 1,\n  TitaniumS: 0,\n  TitaniumP: 1,\n  PlantS: 0,\n  PlantP: 1,\n  EnergyS: 0,\n  EnergyP: 1,\n  HeatS: 0,\n  HeatP: 1,\n}\nexport const state = writable({})\nexport const resetState = () => state.set(initialState)\nexport const resetConfirmVisible = writable(false)\n\n// ## SESSIONS ##\nif (Storage && localStorage.getItem('state')) {\n  state.set(JSON.parse(localStorage.getItem('state')))\n} else {\n  resetState()\n}\n\n\nexport const logs = writable([])\n\nexport const spendCredits = writable(false)\nexport const creditRegister = writable([]) // [{ type, amount }]\n\nexport const creditRegisterTotal = derived(\n  creditRegister,\n  $creditRegister =>\n    $creditRegister.reduce((total, {type, amount}) => {\n      switch(type){\n        case 'SteelS':\n          return total + amount * 2\n          break\n        case 'TitaniumS':\n          return total + amount * 3\n          break\n        default:\n          return total + amount\n      }\n    }, 0)\n)\n\nexport const history = writable([]) // [{ committed, state }]\n\nstate.subscribe($state => {\n\n  // ## HISTORY ##\n  history.update($history => {\n    const stepIdx = $history\n      .map(({committed}) => committed)\n      .lastIndexOf(true) // last committed item\n\n    const history = stepIdx >= 0 ?\n      $history.slice(stepIdx) : // discard any committed undos\n      $history\n\n    return [\n      {\n        committed: false,\n        state: $state\n      },\n      ...history.map(item => ({ ...item, committed: false })) // reset\n    ]\n  })\n\n  // ## SESSIONS ##\n  if (Storage) {\n    localStorage.setItem('state', JSON.stringify($state))\n  }\n\n})\n\n// creditRegister: [{type, amount}]\nexport const queueSpend = (spendCredits, creditRegister$, counterType, state$, counterFn) => {\n  if(spendCredits){ // queue for commit\n    // look for existing entry by type\n    const reg = creditRegister$.find(({type}) => type === counterType)\n    if(reg){\n      // if change is _0_ then remove the item from register\n      if(counterFn(reg.amount) === 0) {\n        // remove item\n        creditRegister.set([...creditRegister$.filter(({type}) => type !== counterType)])\n      } else {\n        // use existing register entry\n        reg.amount = counterFn(reg.amount)\n        creditRegister.set(creditRegister$)\n      }\n    } else {\n      // create new register entry\n      creditRegister.set([\n        ...creditRegister$,\n        {\n          type: counterType,\n          amount: counterFn(0)\n        }\n      ])\n    }\n  }\n\n  // commit now\n  state.update(() => ({\n    ...state$,\n    [counterType]: counterFn(state$[counterType])\n  }))\n}\n\n","<script>\nimport { onDestroy } from 'svelte'\nimport { history, state } from './stores'\n\nconst undo = () => {\n  const step = $history\n    .slice(1) // skip \"current\" step\n    .find(({committed}) => !committed)\n\n  if(!step) return\n\n  step.committed = true\n  const prevHistory = [...$history]\n\n\n  // caution! creates a new history record\n  state.set(step.state)\n\n  // overwrite history\n  history.set(prevHistory)\n}\n\nconst redo = () => {\n  const stepIdx = $history\n    .map(({committed}) => committed)\n    .lastIndexOf(true) // last committed item\n  const step = $history[stepIdx]\n  const prevStep = $history[stepIdx-1]\n\n  if(!step || !prevStep) return\n\n  // uncommit step\n  step.committed = false\n\n  // commit previous step\n  prevStep.committed = true\n\n  const prevHistory = [...$history]\n\n  // caution! creates a new history record\n  state.set(prevStep.state)\n\n  // overwrite history\n  history.set(prevHistory)\n\n}\n</script>\n\n<div class=\"undo-redo-buttons\">\n  <button class=\"button-undo\" on:click={ undo }>\n    ↺\n  </button>\n  <button class=\"button-redo\" on:click={ redo }>\n    ↻\n  </button>\n</div>","<script>\nimport { resetState, resetConfirmVisible } from './stores'\n\nconst showConfirm = () => resetConfirmVisible.set(true)\nconst hideConfirm = () => resetConfirmVisible.set(false)\nconst resetBoard = () => {\n  resetState()\n  hideConfirm()\n}\n</script>\n\n{#if !$resetConfirmVisible}\n  <!-- Disable if in Spend Mode -->\n  <button class=\"button-reset\" on:click={ showConfirm }>☰</button>\n{:else}\n  <button on:click={ hideConfirm }>Cancel</button>\n  <button on:click={ resetBoard }>Confirm</button>\n{/if}\n","<script>\nimport { state, spendCredits, creditRegister, creditRegisterTotal, resetConfirmVisible } from './stores'\nimport HistoryControls from './HistoryControls.svelte'\nimport ResetControls from './ResetControls.svelte'\n\n// item: {type, amount}\nconst itemQuantityFormat = ({ type, amount }) => {\n  const amountStr = amount >= 0 ? '+'+amount : amount\n\n  switch(type){\n    case 'SteelS':\n      return `${amountStr} (${amount * 2} M€)`\n      break\n    case 'TitaniumS':\n      return `${amountStr} (${amount * 3} M€)`\n      break\n    default:\n      return amountStr\n  }\n}\n\nconst enableSpendCredits = () => spendCredits.set(true)\nconst disableSpendCredits = () => { // undo all transactions in register\n  $creditRegister.forEach(({ type, amount }) =>\n    state.set({\n      ...$state,\n      [type]: $state[type] - amount\n    })\n  )\n  creditRegister.set([])\n  spendCredits.set(false)\n}\nconst commitSpendCredits = () => { // empty creditRegister\n  creditRegister.set([])\n  spendCredits.set(false)\n}\n\n</script>\n\n<div class=\"action-buttons\">\n  <ResetControls />\n</div>\n\n{#if !$spendCredits}\n  <div class=\"switch-mode-button\">\n    <button class=\"button-switch\" on:click={ enableSpendCredits }>Enter Spend Mode</button>\n  </div>\n\n  {#if !$resetConfirmVisible}\n    <HistoryControls />\n  {/if}\n\n{/if}\n\n{#if $spendCredits}\n  <div class=\"exit-spend-mode-button\">\n    <button class=\"button-exit\" on:click={ disableSpendCredits }>Exit Spend Mode</button>\n  </div>\n{/if}\n\n<div class=\"grid-summary-container\">\n  <div class=\"grid-summary\">\n    <ul class=\"grid-table\">\n      {#each $creditRegister as item}\n        <li class=\"grid-table-row\">\n          <div class=\"grid-table-resource\">\n            <div class=\"grid-table-quantity\">\n              {itemQuantityFormat(item)}\n            </div>\n            <div class=\"counter-label spend spend-{item.type}\">\n              <span>{item.type}</span>\n            </div>\n            <div style=\"border: 1px solid red;\" class=\"grid-table-mega-credits\">\n              -0 <span class=\"mini-counter-label\"></span>\n            </div>\n          </div>\n        </li>\n      {/each}\n    </ul>\n\n    {#if $spendCredits && $creditRegister.length}\n      <div class=\"grid-table-row grid-table-summary\">\n        <div class=\"grid-table-resource\">\n          <div class=\"grid-table-quantity\">\n            {$creditRegisterTotal}\n          </div>\n          <div class=\"counter-label spend spend-MCreditS\">\n            <span>MegaCredits</span>\n          </div>\n          <div class=\"grid-table-mega-credits\">\n            M€ Value\n          </div>\n        </div>\n      </div>\n    {/if}\n\n  </div>\n\n  {#if $spendCredits && !$creditRegister.length}\n    <p class=\"placeholder-text\">Use the counters to plan your move, then click Buy to initate all actions.</p>\n  {/if}\n\n  <div class=\"grid-actions\">\n  {#if $spendCredits && $creditRegister.length}\n    <button class=\"button-buy\" on:click={ commitSpendCredits }>Buy</button>\n  {/if}\n  </div>\n</div>\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","const counterTimeouts = new Map()\n\n// counter: { id, amount, text }\nexport const updateCounterChange = (counter, fn, resetCb) => {\n  if(counterTimeouts.has(counter.id))\n    clearTimeout(counterTimeouts.get(counter.id))\n\n  counterTimeouts.set(counter.id, setTimeout(() => {\n    resetCb({ amount: 0, text: '' })\n    counterTimeouts.delete(counter.id)\n  }, 3000))\n\n  counter.amount = fn(counter.amount)\n\n  switch(true){\n    case counter.amount < 0 :\n      counter.text = counter.amount\n      break\n    case counter.amount > 0 :\n      counter.text = `+${counter.amount}`\n      break\n    default:\n      counter.text = ''\n  }\n\n  return { ...counter }\n}\n\nexport const counterChangeInAnim = { y: 20, duration: 500 }\n\nexport const createChangeCounter = id => ({\n  id,\n  amount: 0,\n  text: ''\n})\n","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterChange = createChangeCounter('TR')\n\nconst dec5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TR', $state, (n => n - 5))\n  counterChange = updateCounterChange(\n    counterChange,\n    (n => n - 5),\n    (reset) => counterChange = reset\n  )\n}\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TR', $state, (n => n - 1))\n  counterChange = updateCounterChange(\n    counterChange,\n    (n => n - 1),\n    (reset) => counterChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TR', $state, (n => n + 1))\n  counterChange = updateCounterChange(\n    counterChange,\n    (n => n + 1),\n    (reset) => counterChange = reset\n  )\n}\nconst inc5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TR', $state, (n => n + 5))\n  counterChange = updateCounterChange(\n    counterChange,\n    (n => n + 5),\n    (reset) => counterChange = reset\n  )\n}\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n\n  <div class=\"grid-area-resources grid-area-TR\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <button on:click={ dec5 } class=\"counter-button-resource minus\">-5</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.TR }\n        </div>\n        <div class=\"counter-label\">\n          <span>TR</span>\n        </div>\n        {#if counterChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <button on:click={ inc5 } class=\"counter-button-resource plus\">+5</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script>\nimport { state, creditRegister, spendCredits } from './stores'\n\nconst productionPhase = () => {\n  state.update(state => ({\n    ...state,\n\n    // Increment Generation\n    Generation: state.Generation + 1,\n\n    // EnergyS -> HeatS\n    HeatS: state.HeatS + state.EnergyS,\n\n    // Income = TR + MCP\n    MCreditS: state.MCreditS + state.TR + state.MCreditP,\n\n    // Resource Production\n    SteelS: state.SteelS + state.SteelP,\n    TitaniumS: state.TitaniumS + state.TitaniumP,\n    PlantS: state.PlantS + state.PlantP,\n    EnergyS: state.EnergyS + state.EnergyP,\n    HeatS: state.HeatS + state.HeatP,\n  }))\n}\n\n</script>\n\n<div class=\"grid-area-container grid-area-container-generation\">\n  <div class=\"grid-area-resources grid-area-generation\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.Generation }\n        </div>\n        <div class=\"counter-label\">\n          <span>Generation</span>\n        </div>\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button class=\"counter-button-resource\" disabled={$spendCredits} on:click={ productionPhase }>↑</button>\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterSChange = createChangeCounter('MCreditS')\nlet counterPChange = createChangeCounter('MCreditP')\n\nconst dec5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'MCreditS', $state, (n => n - 5))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 5),\n    (reset) => counterSChange = reset\n  )\n}\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'MCreditS', $state, (n => n - 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'MCreditS', $state, (n => n + 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'MCreditS', $state, (n => n + 5))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 5),\n    (reset) => counterSChange = reset\n  )\n}\nconst decP = () => {\n  queueSpend($spendCredits, $creditRegister, 'MCreditP', $state, (n => n - 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n - 1),\n    (reset) => counterPChange = reset\n  )\n}\nconst incP = () => {\n  queueSpend($spendCredits, $creditRegister, 'MCreditP', $state, (n => n + 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n + 1),\n    (reset) => counterPChange = reset\n  )\n}\n\n\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n  <div class=\"grid-area-income grid-area-MCreditP\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ decP } class=\"counter-button-resource\">-1</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.MCreditP }\n        </div>\n        {#if counterPChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterPChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ incP } class=\"counter-button-resource\">+1</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"grid-area-resources grid-area-MCreditS\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <button on:click={ dec5 } class=\"counter-button-resource minus\">-5</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.MCreditS }\n        </div>\n        <div class=\"counter-label\">\n          <span>MegaCredits Resources</span>\n        </div>\n        {#if counterSChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterSChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <button on:click={ inc5 } class=\"counter-button-resource plus\">+5</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterSChange = createChangeCounter('SteelS')\nlet counterPChange = createChangeCounter('SteelP')\n\nconst dec5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'SteelS', $state, (n => n - 5))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 5),\n    (reset) => counterSChange = reset\n  )\n}\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'SteelS', $state, (n => n - 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'SteelS', $state, (n => n + 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'SteelS', $state, (n => n + 5))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 5),\n    (reset) => counterSChange = reset\n  )\n}\nconst decP = () => {\n  queueSpend($spendCredits, $creditRegister, 'SteelP', $state, (n => n - 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n - 1),\n    (reset) => counterPChange = reset\n  )\n}\nconst incP = () => {\n  queueSpend($spendCredits, $creditRegister, 'SteelP', $state, (n => n + 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n + 1),\n    (reset) => counterPChange = reset\n  )\n}\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n  <div class=\"grid-area-income grid-area-SteelP\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ decP } class=\"counter-button-resource\">-1</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.SteelP }\n        </div>\n        {#if counterPChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterPChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ incP } class=\"counter-button-resource\">+1</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"grid-area-resources grid-area-SteelS\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <button on:click={ dec5 } class=\"counter-button-resource minus\">-5</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.SteelS }\n        </div>\n        <div class=\"counter-label\">\n          <span>Steel</span>\n        </div>\n        {#if counterSChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterSChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <button on:click={ inc5 } class=\"counter-button-resource plus\">+5</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterSChange = createChangeCounter('TitaniumS')\nlet counterPChange = createChangeCounter('TitaniumP')\n\nconst dec5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TitaniumS', $state, (n => n - 5))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 5),\n    (reset) => counterSChange = reset\n  )\n}\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TitaniumS', $state, (n => n - 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TitaniumS', $state, (n => n + 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc5 = () => {\n  queueSpend($spendCredits, $creditRegister, 'TitaniumS', $state, (n => n + 5))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 5),\n    (reset) => counterSChange = reset\n  )\n}\nconst decP = () => {\n  queueSpend($spendCredits, $creditRegister, 'TitaniumP', $state, (n => n - 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n - 1),\n    (reset) => counterPChange = reset\n  )\n}\nconst incP = () => {\n  queueSpend($spendCredits, $creditRegister, 'TitaniumP', $state, (n => n + 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n + 1),\n    (reset) => counterPChange = reset\n  )\n}\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n  <div class=\"grid-area-income grid-area-TitaniumP\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ decP } class=\"counter-button-resource\">-1</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.TitaniumP }\n        </div>\n        {#if counterPChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterPChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ incP } class=\"counter-button-resource\">+1</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"grid-area-resources grid-area-TitaniumS\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <button on:click={ dec5 } class=\"counter-button-resource minus\">-5</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.TitaniumS }\n        </div>\n        <div class=\"counter-label\">\n          <span>Titanium</span>\n        </div>\n        {#if counterSChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterSChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <button on:click={ inc5 } class=\"counter-button-resource plus\">+5</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterSChange = createChangeCounter('PlantS')\nlet counterPChange = createChangeCounter('PlantP')\n\nconst dec8 = () => {\n  queueSpend($spendCredits, $creditRegister, 'PlantS', $state, (n => n - 8))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 8),\n    (reset) => counterSChange = reset\n  )\n}\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'PlantS', $state, (n => n - 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'PlantS', $state, (n => n + 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst decP = () => {\n  queueSpend($spendCredits, $creditRegister, 'PlantP', $state, (n => n - 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n - 1),\n    (reset) => counterPChange = reset\n  )\n}\nconst incP = () => {\n  queueSpend($spendCredits, $creditRegister, 'PlantP', $state, (n => n + 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n + 1),\n    (reset) => counterPChange = reset\n  )\n}\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n  <div class=\"grid-area-income grid-area-PlantP\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ decP } class=\"counter-button-resource\">-1</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.PlantP }\n        </div>\n        {#if counterPChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterPChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ incP } class=\"counter-button-resource\">+1</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"grid-area-resources grid-area-PlantS\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <button on:click={ dec8 } class=\"counter-button-resource minus\">-8</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.PlantS }\n        </div>\n        <div class=\"counter-label\">\n          <span>Plants</span>\n        </div>\n        {#if counterSChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterSChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterSChange = createChangeCounter('EnergyS')\nlet counterPChange = createChangeCounter('EnergyP')\n\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'EnergyS', $state, (n => n - 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'EnergyS', $state, (n => n + 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst decP = () => {\n  queueSpend($spendCredits, $creditRegister, 'EnergyP', $state, (n => n - 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n - 1),\n    (reset) => counterPChange = reset\n  )\n}\nconst incP = () => {\n  queueSpend($spendCredits, $creditRegister, 'EnergyP', $state, (n => n + 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n + 1),\n    (reset) => counterPChange = reset\n  )\n}\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n  <div class=\"grid-area-income grid-area-EnergyP\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ decP } class=\"counter-button-resource\">-1</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.EnergyP }\n        </div>\n        {#if counterPChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterPChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ incP } class=\"counter-button-resource\">+1</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"grid-area-resources grid-area-EnergyS\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.EnergyS }\n        </div>\n        <div class=\"counter-label\">\n          <span>Energy</span>\n        </div>\n        {#if counterSChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterSChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<script>\nimport { fly, fade } from 'svelte/transition'\nimport { state, spendCredits, creditRegister, queueSpend } from './stores'\nimport { createChangeCounter, updateCounterChange, counterChangeInAnim } from './utils'\n\nlet counterSChange = createChangeCounter('HeatS')\nlet counterPChange = createChangeCounter('HeatP')\n\nconst dec8 = () => {\n  queueSpend($spendCredits, $creditRegister, 'HeatS', $state, (n => n - 8))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 8),\n    (reset) => counterSChange = reset\n  )\n}\nconst dec1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'HeatS', $state, (n => n - 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n - 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst inc1 = () => {\n  queueSpend($spendCredits, $creditRegister, 'HeatS', $state, (n => n + 1))\n  counterSChange = updateCounterChange(\n    counterSChange,\n    (n => n + 1),\n    (reset) => counterSChange = reset\n  )\n}\nconst decP = () => {\n  queueSpend($spendCredits, $creditRegister, 'HeatP', $state, (n => n - 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n - 1),\n    (reset) => counterPChange = reset\n  )\n}\nconst incP = () => {\n  queueSpend($spendCredits, $creditRegister, 'HeatP', $state, (n => n + 1))\n  counterPChange = updateCounterChange(\n    counterPChange,\n    (n => n + 1),\n    (reset) => counterPChange = reset\n  )\n}\n</script>\n\n<div class=\"grid-area-container grid-area-container\">\n  <div class=\"grid-area-income grid-area-HeatP\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ decP } class=\"counter-button-resource\">-1</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.HeatP }\n        </div>\n        {#if counterPChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterPChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ incP } class=\"counter-button-resource\">+1</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"grid-area-resources grid-area-HeatS\">\n    <div class=\"grid-area\">\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ dec1 } class=\"counter-button-resource minus\">-1</button>\n          <button on:click={ dec8 } class=\"counter-button-resource minus\">-8</button>\n        </div>\n      </div>\n      <div class=\"counter\">\n        <div class=\"counter-count\">\n          { $state.HeatS }\n        </div>\n        <div class=\"counter-label\">\n          <span>Heat</span>\n        </div>\n        {#if counterSChange.text !== ''}\n        <div class=\"counter-change\" in:fly={counterChangeInAnim} out:fade>\n          { counterSChange.text }\n        </div>\n        {/if}\n      </div>\n      <div class=\"counter-buttons\">\n        <div class=\"counter-buttons-resources\">\n          <button on:click={ inc1 } class=\"counter-button-resource plus\">+1</button>\n          <div class=\"counter-button-resource counter-button-resource-placeholder\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: { }\n});\n\nexport default app;\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","i","length","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","style","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","dirty","ctx","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","create_out_transition","group","reset","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","detaching","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","index","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","initialState","TR","Generation","MCreditS","MCreditP","SteelS","SteelP","TitaniumS","TitaniumP","PlantS","PlantP","EnergyS","EnergyP","HeatS","HeatP","state","resetState","resetConfirmVisible","Storage","localStorage","getItem","JSON","parse","spendCredits","creditRegister","creditRegisterTotal","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","sync","result","unsubscribers","derived","$creditRegister","reduce","total","amount","history","$state","$history","stepIdx","committed","lastIndexOf","slice","item","setItem","stringify","queueSpend","creditRegister$","counterType","state$","counterFn","reg","find","prevHistory","prevStep","hideConfirm","key","important","setProperty","iterations","amountStr","cubicOut","fade","linear","getComputedStyle","opacity","fly","y","target_opacity","transform","od","u","counterTimeouts","updateCounterChange","counter","resetCb","id","clearTimeout","get","setTimeout","counterChangeInAnim","createChangeCounter","counterChange","$spendCredits","n","counterSChange","counterPChange","body"],"mappings":"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"}